<plominodatabase id="iol_praticaweb">
  <design>
    <resource id="getVincoliParticelle-standard" title="Elenco della zonizzazione" type="Script (Python)"><![CDATA[## Script (Python) "getVincoliParticelle-standard"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=comune='',sezioni='',fogli='',particelle=''
##title=Elenco della zonizzazione
##
# -*- coding: utf-8 -*-
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString,open_url,asUnicode
from iol.document.plomino_utils import parseXML, requests_post, requests_get
from Products.CMFPlomino.PlominoUtils import json_dumps

#comune='A278' and  sezione='UN' and foglio='5' and mappale='5'

def getElencoZone(pianificazione='', comune='',sezione='',foglio='',particella=''):
    ret=[]
    text=''
    andFilters = []
    andFilters.append("comune='%s'" %comune)
    andFilters.append("mappale='%s'" %particella)
    andFilters.append("foglio='%s'" %foglio)
    txtMap ="Foglio:%s Mappale:%s" %(foglio,particella)
    if sezione:
        andFilters.append("sezione='%s'" %sezione)
        txtMap = ("Sezione:%s " %sezione) + txtMap
    sFilter = "(" + " AND ".join(andFilters) + ")"
    pianificazione = 'Pianificazione_%s' %pianificazione

    if pianificazione in context.zsql:
        sVincolo=''
        lblVincolo=''
        for res in context.zsql[pianificazione](filter = sFilter).dictionaries():
            text = "%s: %s" %(res['tavola'],res['zona'])
            if res['sigla']:
                text = text + " (%s)"%res['sigla']
            if lblVincolo!=res['vincolo']:
                lblVincolo=res['vincolo']
                if sVincolo:
                    lblVincolo = '\r\n' + lblVincolo
                text = lblVincolo + '\n' + text
                
            sVincolo = sVincolo + text + '\n'
  
    return txtMap + '\n' + sVincolo

####code
sezioni = sezioni.split(',')
fogli = fogli.split(',')
particelle = particelle.split(',')
pUrbanistica=[]
pTerritoriale=[]

for index in range(len(particelle)):
    if len(sezioni)>1:
        sezione = sezioni[index]
    else:
        sezione=''
    foglio = fogli[index]
    particella = particelle[index]
    pUrbanistica.append(getElencoZone(pianificazione='urbanistica',comune=comune,sezione=sezione,foglio=foglio,particella=particella))
    pTerritoriale.append(getElencoZone(pianificazione='territoriale',comune=comune,sezione=sezione,foglio=foglio,particella=particella))
    
    
ret = "Pianificazione Urbanistica:\n\r"
ret = ret + "==================\n\r".join(pUrbanistica)
ret = ret + "\n\rPianificazione Territoriale:\n\r"
ret = ret + "==================\n\r".join(pTerritoriale)    
    
return ret
]]></resource>
  </design>
</plominodatabase>
