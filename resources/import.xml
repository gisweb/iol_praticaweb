<plominodatabase id="iol_praticaweb">
  <design>
    <resource id="import" title="" type="Folder">
      <resource id="zsqlPratiche" title="" type="Z SQL Method"/>
      <resource id="zsqlSoggetti" title="" type="Z SQL Method"/>
      <resource id="zsqlRichiedenti" title="" type="Z SQL Method"/>
      <resource id="faqualcosa" title="" type="Script (Python)"><![CDATA[## Script (Python) "faqualcosa"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
tp=dict()


brains=context.getIndex().dbsearch(dict(pratica=6239))
return brains[0].id



data=context.zsqlTipoPratica().dictionaries()
for row in data:
    tp[str(row['id'])]=row['nome']
    
    
for doc in context.getAllDocuments():
    if doc.getItem('tipo'):
        doc.setItem('tipo_pratica_altro',tp[str(doc.getItem('tipo'))])
    else:
        print doc.getId()
    
return printed

db=context.getParentDatabase()
idx=db.getIndex()











doc=context.getDocument('20062-0000-pe')
doc.setItem('data_protocollo',StringToDate('1906-03-28'))
doc.setItem('data_presentazione',StringToDate('1906-03-28'))

brains=context.getIndex().dbsearch(dict(pratica=1534))



return brains[0].id



#nct_sezione,nct_foglio,nct_particella,nct_geometry
for doc in context.getAllDocuments():
    if doc.getItem('data_protocollo') and doc.getItem('data_protocollo')>=StringToDate('2019-01-01'):
        print doc.getId(),doc.getItem('data_protocollo'),int(doc.getItem('numero_pratica')[:3])
        doc.setItem('progressivo_anno',int(doc.getItem('numero_pratica')[:3]))
    
return printed











from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString

for doc in context.getAllDocuments():
    
    doc.setItem('anno_pratica',doc.getItem('anno_protocollo'))
    doc.setItem('identificativo',doc.getId())
    doc.setItem('iol_tipo_app','pe')
    doc.setItem('iol_workflow','iol_sue_wf')
    doc.setItem('fisica_search',"%s %s" %(doc.getItem('fisica_cognome'),doc.getItem('fisica_nome')))
    doc.setItem('progettista_search',"%s %s" %(doc.getItem('progettista_cognome'),doc.getItem('progettista_nome')))
    if doc.getItem('data_protocollo'):
        doc.setItem('data_protocollo_testo',DateToString(doc.getItem('data_protocollo'),format="%Y/%m/%d %H:%M"))
        doc.setItem('numero_protocollo_testo','Anno %s n. % 6s' %(DateToString(doc.getItem('data_protocollo'),format='%Y'),(doc.getItem('numero_protocollo'))))   
    
    context.plone_log(doc.getId())
    

    
return 'ok'











for doc in context.getAllDocuments():
    doc.setItem('anno_pratica',doc.getItem('anno_protocollo'))
    doc.setItem('identificativo',doc.getId())
    doc.setItem('iol_tipo_app','pe')
    doc.setItem('iol_workflow','iol_sue_wf')

    
return 'oko'
]]></resource>
      <resource id="zsqlProgettisti" title="" type="Z SQL Method"/>
      <resource id="cicla" title="" type="Script (Python)"><![CDATA[## Script (Python) "cicla"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
db=context.getParentDatabase()
ll=[]

for doc in context.getAllDocuments():
    if doc.getItem('iol_tipo_app')=='pe':
        context.plone_log(doc.getId())
      
        ss = "%s %s %s %s %s %s %s" %(doc.getItem('fisica_cognome',''),doc.getItem('fisica_nome',''),doc.getItem('giuridica_denominazione'),doc.getItem('progettista_cognome',''),doc.getItem('progettista_nome',''),doc.getItem('direttore_cognome',''),doc.getItem('direttore_nome',''))
        doc.setItem('soggetto_search',ss)
      
        if not doc.getItem('numero_protocollo'):
            doc.setItem('numero_protocollo',0)
            
        if not doc.getItem('data_protocollo') or doc.getItem('data_protocollo')<StringToDate('1900-01-01'):
            doc.setItem('data_protocollo',StringToDate('1900-01-01'))

            
        nProtocollo=doc.getItem('numero_protocollo')
        dProtocollo=doc.getItem('data_protocollo')
        doc.setItem('anno_protocollo',int(DateToString(dProtocollo,format='%Y')))
        doc.setItem('data_protocollo_testo',DateToString(dProtocollo,format="%Y/%m/%d %H:%M"))
        doc.setItem('numero_protocollo_testo','Anno %s n. % 6d' %(DateToString(dProtocollo,format='%Y'),int(nProtocollo)))   

    
return 'ok'







for doc in context.getAllDocuments():
    
    if doc.getItem('iol_tipo_app') in ['iniziolavori','finelavori','integrazione','voltura']:
        print doc.getId()
        doc.setItem('iol_workflow','iol_sue_wf')
        doc.doAction('init')
        doc.doAction('10_invia_domanda') 
        if doc.getItem('data_protocollo'):
            doc.doAction('15_protocolla')

return printed
    

    #if doc.getItem('iol_tipo_app')!='':
    #    if doc.getItem('numero_protocollo'):
     #       print doc.getId(), doc.getItem('numero_protocollo'), doc.getItem('numero_pratica')
        #if not doc.getItem('anno_protocollo'):
        #    doc.setItem('anno_protocollo',doc.getItem('anno_pratica'))
            

        
            #if doc.getItem('iol_tipo_app') in ['iniziolavori','finelavori','integrazione','voltura']:
            #    doc.setItem('Form','frm__presentata')
            #else:
            #    doc.setItem('Form','frm__bo-sue')
            #if not doc.getItem('direttore_strutt_opt'):
            #    doc.setItem('direttore_strutt_opt',doc.getItem('direttore_strutturale_opt'))
            #doc.setItem('Form','frm__bo-sue')
            #doc.doAction('init')
            #doc.doAction('10_invia_domanda')
            #doc.doAction('15_protocolla')
        #doc.setItem('sorteggio','N')
            #doc.setItem('IOL_PREVIOUS_FORM','bo_procedimento')
        #doc.setItem('identificativo',doc.getId())
        #doc.setItem('iol_owner','ediliziaprivata@comune.moneglia.ge.it')
        #doc.setItem('iol_form_title',doc.getItem('tipo_pratica'))
        #doc.setItem('iol_start_form','frm_pe')

        
        #doc.setItem('ws_response_message',"<div class='alert alert-success'><h5>Comunicazione inviata correttamente al servizio Edilizia Privata e acquisita con numero pratica %s</h5></div>" %doc.getItem('numero_pratica'))
        
        
        ###cancellati quelli buoni presentatai da iol
        #if doc.getItem('data_protocollo')>StringToDate('2018-12-15'):
        #    print doc.getId()
        #    ll.append(doc.getId())
            #db.deleteDocument(doc)
            
        

        
#db.deleteDocuments(ll)
return printed
]]></resource>
      <resource id="zsqlDirettori" title="" type="Z SQL Method"/>
      <resource id="zsqlNct" title="" type="Z SQL Method"/>
      <resource id="zsqlNceu" title="" type="Z SQL Method"/>
      <resource id="zsqlCivici" title="" type="Z SQL Method"/>
      <resource id="zsqlGeometrie" title="" type="Z SQL Method"/>
      <resource id="AggiornaCampiCalcolati" title="" type="Script (Python)"><![CDATA[## Script (Python) "AggiornaCampiCalcolati"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import StringToDate,DateToString
from iol.document.plomino_utils import serializeGrid


for doc in context.getAllDocuments():
    
    if doc.getItem('iol_tipo_app')=='pe':
        if not doc.getItem('data_protocollo') or doc.getItem('data_protocollo')<StringToDate('1900-01-01'):
            doc.setItem('data_protocollo',StringToDate('1900-01-01'))
            
        if not doc.getItem('data_presentazione') or doc.getItem('data_presentazione')<StringToDate('1900-01-01'):
            doc.setItem('data_presentazione',StringToDate('1900-01-01')) 
           
        doc.setItem('iol_owner',doc.getItem('progettista_email'))
        doc.setItem('Plomino_Readers',['sue_readers',doc.getItem('progettista_email')])
    
        context.plone_log(doc.getId())
    
        rows = doc.getItem('elenco_nct',[])
        fogli = []
        mappali = []
        for row in rows:
            fogli.append(row[1])
            mappali.append(row[2])
            
        doc.setItem('foglio_search',fogli)
        doc.setItem('mappale_search',mappali)
        
        indirizzi = serializeGrid(doc,fieldName='elenco_civici',formName='sub_ubicazione')
        ind = []
        for indirizzo in indirizzi:
            ind.append(indirizzo["civico_via"])
        doc.setItem('indirizzo_search',ind)
        
        doc.setItem('ubicazioni_indirizzo', context.getParentDatabase().resources.customscripts.getUbicazioniIndirizzo(doc))
        
       
        doc.setItem('sorteggio','N')
        doc.setItem('IOL_PREVIOUS_FORM','bo_procedimento')
        doc.setItem('identificativo',doc.getId())
        
        doc.setItem('iol_form_title',doc.getItem('tipo_pratica'))
        doc.setItem('iol_start_form','frm_pe')
        
        if doc.getItem('data_presentazione'):
            doc.setItem('data_presentazione_testo',DateToString(doc.getItem('data_presentazione'),format="%Y/%m/%d %H:%M"))
           
        nProtocollo=doc.getItem('numero_protocollo')
        dProtocollo=doc.getItem('data_protocollo')
        if dProtocollo and nProtocollo:
            doc.setItem('anno_protocollo',int(DateToString(dProtocollo,format='%Y')))
            doc.setItem('data_protocollo_testo',DateToString(dProtocollo,format="%Y/%m/%d %H:%M"))
            doc.setItem('numero_protocollo_testo','Anno %s n. % 6d' %(DateToString(dProtocollo,format='%Y'),int(nProtocollo)))    
        
        doc.setItem('fisica_search',"%s %s" %(doc.getItem('fisica_cognome'),doc.getItem('fisica_nome')))
        doc.setItem('progettista_search',"%s %s" %(doc.getItem('progettista_cognome'),doc.getItem('progettista_nome')))   
        doc.setItem('direttore_search',"%s %s" %(doc.getItem('direttore_cognome'),doc.getItem('direttore_nome')))   
        ss = "%s %s %s %s %s %s %s" %(doc.getItem('fisica_cognome',''),doc.getItem('fisica_nome',''),doc.getItem('giuridica_denominazione'),
            doc.getItem('progettista_cognome',''),doc.getItem('progettista_nome',''),doc.getItem('direttore_cognome',''),doc.getItem('direttore_nome',''))
        doc.setItem('soggetto_search',ss)
        
        doc.setItem('iol_workflow','iol_sue_wf')
        doc.doAction('init_bo')  



return 'ok'
]]></resource>
      <resource id="importaDatiPersi" title="" type="Script (Python)"><![CDATA[## Script (Python) "importaDatiPersi"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlDatiPersi().dictionaries()
db=context.getParentDatabase()
idx=db.getIndex()

for row in data:
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains)>0:
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        for key in row.keys():
            if 'data' in key and row[key]:
                try:
                    doc.setItem(key,StringToDate(row[key]))
                except:
                    doc.setItem(key,row[key])
            else:
                doc.setItem(key,row[key])
        

return 'ok'
]]></resource>
      <resource id="zsqlDatiPersi" title="" type="Z SQL Method"/>
      <resource id="importaAllegati" title="" type="Script (Python)"><![CDATA[## Script (Python) "importaAllegati"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
portal = context.portal_url.getPortalObject()
return portal['import']['Documenti.json']
]]></resource>
      <resource id="zsqlAllegati" title="" type="Z SQL Method"/>
      <resource id="01-importaPratiche" title="" type="Script (Python)"><![CDATA[## Script (Python) "01-importaPratiche"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString,DateTime,parse
data = context.zsqlPratiche().dictionaries()
db=context.getParentDatabase()

'''
select avvioproc.pratica, e_tipopratica.nome from  pe.avvioproc 
inner join pe.e_tipopratica on (avvioproc.tipo=e_tipopratica.id) where online=0 and data_prot > '2019-01-01' 
'''
# AGGIUNGERE INDICE praticaweb_id

count=100
for row in data:
    count=row["docid"]
 
    try:
        docId = "%05d-%s-pe" %(count,DateToString(StringToDate(str(row["data_protocollo"])),'%Y'))
    except:
        docId = "%05d-%s-pe" %(count,'0000')
        
    newDoc = db.createDocument(docId)
    for key in row.keys():
        if 'data' in key and row[key]:
            try:
                newDoc.setItem(key,StringToDate(str(row[key])))
            except:
                newDoc.setItem(key,row[key])
        elif row[key]:
            newDoc.setItem(key,row[key])
            
    newDoc.setItem('Form','frm_presentata')
    newDoc.setItem('IOL_PREVIOUS_FORM','bo_procedimento')   
    newDoc.setItem('iol_workflow','iol_sue_wf')
    newDoc.setItem('identificativo',docId)
    context.plone_log(newDoc.getId())

print 'ok'


return printed
]]></resource>
      <resource id="02-importaRichiedenti" title="" type="Script (Python)"><![CDATA[## Script (Python) "02-importaRichiedenti"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlRichiedenti().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()
pratiche=[] #lista di pratiche fatte
newrows=[]


form = context.getForm('sub_comproprietari')
field = form.getFormField('anagrafica_soggetti')   
grid_field_names = field.getSettings().field_mapping.split(',')  

#return grid_field_names

for row in data:
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains)>0:
        doc=brains[0].getObject()
        if row['pratica'] in pratiche: #ho gia inserito un nominativo metto gli altri su datagrid
            newrows=doc.getItem('anagrafica_soggetti',[])
            context.plone_log('metto su datagrid %s' %doc.getId())
            newrow=[]
            for key in grid_field_names:
                if key in row:
                    if key=='fisica_data_nato':
                        if row[key]:
                            v=DateToString(StringToDate(row[key]),format="%d/%m/%Y")
                        else:
                            v=''
                    else:
                        v=row[key] or ''  
                    newrow.append (v)
                else:
                    newrow.append('')
                    
            newrows.append(newrow)
            doc.setItem('anagrafica_soggetti',newrows)
        
        else:
            pratiche.append(row['pratica'])
            context.plone_log('metto su doc %s' %doc.getId())
            newrows=[]
            doc.removeItem('anagrafica_soggetti')
            for key in row:
                if row[key]:
                    if key=='fisica_data_nato':
                        doc.setItem(key,StringToDate(row[key]))
                    else:
                        doc.setItem(key,row[key])

    else:
        print row["pratica"]

print 'ok'                        
return printed
]]></resource>
      <resource id="03-importaProgettisti" title="" type="Script (Python)"><![CDATA[## Script (Python) "03-importaProgettisti"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlProgettisti().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()


for row in data:    
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains):
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        doc.setItem('progettista_opt','2')
        for key in row:
            if row[key]:
                if '_data' in key:
                    doc.setItem(key,StringToDate(row[key]))                
                else:
                    doc.setItem(key,row[key])
    else:
        print row["pratica"]
     
        
print 'ok'    
return printed
]]></resource>
      <resource id="zsqlProgettistiCA" title="" type="Z SQL Method"/>
      <resource id="04-importaProgettistiCA" title="" type="Script (Python)"><![CDATA[## Script (Python) "04-importaProgettistiCA"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlProgettistiCA().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()


for row in data:    
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains):
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        doc.setItem('opere_strutturali_opt','1')
        for key in row:
            if row[key]:
                if '_data' in key:
                    doc.setItem(key,StringToDate(row[key]))                
                else:
                    doc.setItem(key,row[key])
    else:
        print row["pratica"]
     
        
print 'ok'    
return printed
]]></resource>
      <resource id="05-importaDirettori" title="" type="Script (Python)"><![CDATA[## Script (Python) "05-importaDirettori"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlDirettori().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()


for row in data:    
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains):
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        doc.setItem('direttore_opt','3')
        for key in row:
            if row[key]:
                if '_data' in key:
                    doc.setItem(key,StringToDate(row[key]))                
                else:
                    doc.setItem(key,row[key])
    else:
        print row["pratica"]
              
        
print 'ok'    
return printed
]]></resource>
      <resource id="zsqlDirettoriCA" title="" type="Z SQL Method"/>
      <resource id="06-importaDirettoriCA" title="" type="Script (Python)"><![CDATA[## Script (Python) "06-importaDirettoriCA"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlDirettoriCA().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()


for row in data:    
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains):
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        doc.setItem('direttore_strutt_opt','3')
        for key in row:
            if row[key]:
                if '_data' in key:
                    doc.setItem(key,StringToDate(row[key]))                
                else:
                    doc.setItem(key,row[key])
     
    else:
        print row["pratica"]
             
print 'ok'    
return printed
]]></resource>
      <resource id="zsqlEsecutori" title="" type="Z SQL Method"/>
      <resource id="07-importaEsecutori" title="" type="Script (Python)"><![CDATA[## Script (Python) "07-importaEsecutori"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlEsecutori().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()


for row in data:    
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains):
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        doc.setItem('lavori_economia_opt','2')
        for key in row:
            if row[key]:
                if '_data' in key:
                    doc.setItem(key,StringToDate(row[key]))                
                else:
                    doc.setItem(key,row[key])
    else:
        print row["pratica"]
          
        
print 'ok'    
return printed
]]></resource>
      <resource id="08-importaCivici" title="" type="Script (Python)"><![CDATA[## Script (Python) "08-importaCivici"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
data=context.zsqlCivici().dictionaries()
db=context.getParentDatabase()
idx=db.getIndex()

form = context.getForm('sub_ubicazione')
field = form.getFormField('elenco_civici')   
grid_field_names = field.getSettings().field_mapping.split(',')  

'''
for doc in context.getAllDocuments():
    if doc.getItem('iol_tipo_app')=='pe':
        doc.removeItem('elenco_civici')
return 'ok'
'''

for row in data:
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains)>0:
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        newrows=doc.getItem('elenco_civici',[])
        newrow=[]
        for key in grid_field_names:
            if key in row:
                v=row[key] or ''  
                newrow.append (v)
            else:
                newrow.append('')
                
        newrows.append(newrow)
        doc.setItem('elenco_civici',newrows) 
    else:
        print row["pratica"]
             
        
print 'ok'
return printed
]]></resource>
      <resource id="09-importaNct" title="" type="Script (Python)"><![CDATA[## Script (Python) "09-importaNct"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
data=context.zsqlNct().dictionaries()
db=context.getParentDatabase()
idx=db.getIndex()

form = context.getForm('sub_ubicazione')
field = form.getFormField('elenco_nct')   
grid_field_names = field.getSettings().field_mapping.split(',')  

#return grid_field_names
'''
for doc in context.getAllDocuments():
    if doc.getItem('iol_tipo_app')=='pe':
        doc.removeItem('elenco_nct')
return 'ok'
'''

for row in data:
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains)>0:
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        newrows=doc.getItem('elenco_nct',[])
        newrow=[]
        for key in grid_field_names:
            if key in row:
                v=row[key] or ''  
                newrow.append (v)
            else:
                newrow.append('')
                
        newrows.append(newrow)
        #se ci sono note appendo una riga in piu con tutto il casino[nct_sezione, nct_foglio, nct_particella, nct_geometry]
        if row['note']:
            newrows.append(['UN','',row['note'],''])        
        
        doc.setItem('elenco_nct',newrows)
        
    else:
        print row["pratica"]
             
        
print 'ok'    
return printed
]]></resource>
      <resource id="10-importaNceu" title="" type="Script (Python)"><![CDATA[## Script (Python) "10-importaNceu"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
data=context.zsqlNceu().dictionaries()
db=context.getParentDatabase()
idx=db.getIndex()

form = context.getForm('sub_ubicazione')
field = form.getFormField('elenco_nceu')   
grid_field_names = field.getSettings().field_mapping.split(',')  

#return grid_field_names
'''
for doc in context.getAllDocuments():
    if doc.getItem('iol_tipo_app')=='pe':
        doc.removeItem('elenco_nceu')
return 'ok'
'''

for row in data:
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains)>0:
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        newrows=doc.getItem('elenco_nceu',[])
        newrow=[]
        for key in grid_field_names:
            if key in row:
                v=row[key] or ''  
                newrow.append (v)
            else:
                newrow.append('')
                
        newrows.append(newrow)
        #se ci sono note appendo una riga in piu con tutto il casino[nct_sezione, nct_foglio, nct_particella, nct_geometry]
        if row['note']:
            newrows.append(['UN','',row['note'],''])        
        
        doc.setItem('elenco_nceu',newrows) 
        
        ##allineop nct se vuoto
        if not doc.getItem('elenco_nct'):
            doc.setItem('elenco_nct',doc.getItem('elenco_nceu'))  

    else:
        print row["pratica"]
             
        
print 'ok'  
return printed
]]></resource>
      <resource id="zsqlPosizione" title="" type="Z SQL Method"/>
      <resource id="11-importaGeometrie" title="" type="Script (Python)"><![CDATA[## Script (Python) "11-importaGeometrie"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
#nct_sezione,nct_foglio,nct_particella,nct_geometry
##SE NCT VUOTO COPIO NCEU

for doc in context.getAllDocuments():
    if doc.getItem('elenco_nct',[])!=[]:
        rows=doc.getItem('elenco_nct',[])
        context.plone_log(doc.getId())
        x=0;y=0;lat=0;lng=0
        for i in range(0,len(rows)):
            data=context.zsqlGeometrie(sezione=rows[i][0].strip(),foglio=rows[i][1].strip(),mappale=rows[i][2].strip(),cod_cat=doc.getItem('iol_comune')).dictionaries()
            if len(data)>0:
                rows[i][3]=data[0]["geom"]
                lat = data[0]["lat"] 
                lng = data[0]["lng"] 
                x = data[0]["x"] 
                y = data[0]["y"] 
                

        
        doc.setItem('elenco_nct',rows)
        doc.setItem('coord_x',x)
        doc.setItem('coord_y',y)
        doc.setItem('coord_lat',lat)
        doc.setItem('coord_lng',lng)
        

    
return 'ok'
]]></resource>
      <resource id="zsqlTipoPratica" title="" type="Z SQL Method"/>
      <resource id="zsqlResponsabili" title="" type="Z SQL Method"/>
      <resource id="20-aggiustaPraticheOldDb" title="" type="Script (Python)"><![CDATA[## Script (Python) "20-aggiustaPraticheOldDb"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
for doc in context.getAllDocuments():
    if doc.getItem('old_db'):
        doc.setItem('Form','frm_presentata')
        doc.setItem('IOL_PREVIOUS_FORM','bo_procedimento')   
        if doc.getItem('progettista_nome'):
            doc.setItem('progettista_opt','2')            
        if doc.getItem('direttore_nome'):
            doc.setItem('direttore_opt','3')

        print doc.getId()
        
return printed
]]></resource>
      <resource id="zsqlComunicazioniLavori" title="" type="Z SQL Method"/>
      <resource id="15-importaComunicazioniLavori" title="" type="Script (Python)"><![CDATA[## Script (Python) "15-importaComunicazioniLavori"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlComunicazioniLavori().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()


for row in data:    
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    
    if len(brains):
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        if row["tipo_comunicazione"]==1:
            doc.setItem('data_inizio_lavori',StringToDate(str(row["data_lavori"])))
        if row["tipo_comunicazione"]==2:
            doc.setItem('data_fine_lavori',StringToDate(str(row["data_lavori"])))            
        if row["note"]:
            doc.setItem('note_lavori',row["note"])   

    else:
        print row["pratica"]
     
        
print 'ok'    
return printed
]]></resource>
      <resource id="16-importaTitoli" title="" type="Script (Python)"><![CDATA[## Script (Python) "16-importaTitoli"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlTitoli().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()

for row in data:    
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    
    doc=brains[0].getObject()
    context.plone_log(doc.getId())
    for key in row.keys():
        if 'data' in key and row[key]:
            doc.setItem(key,StringToDate(str(row[key])))
        elif row[key]:
            doc.setItem(key,row[key])

        
print 'ok'    
return printed
]]></resource>
      <resource id="zsqlTitoli" title="" type="Z SQL Method"/>
      <resource id="21-aggiustaPraticheOldDb" title="" type="Script (Python)"><![CDATA[## Script (Python) "21-aggiustaPraticheOldDb"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
for doc in context.getAllDocuments():
    if doc.getItem('old_db'):

        print doc.getId()
        
return printed
]]></resource>
      <resource id="30-AssegnaResponsabile" title="" type="Script (Python)"><![CDATA[## Script (Python) "30-AssegnaResponsabile"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=
##
from Products.CMFPlomino.PlominoUtils import json_dumps,StringToDate,DateToString
data = context.zsqlResponsabili().dictionaries()
db=context.getParentDatabase()
doc=None
idx=db.getIndex()


for row in data:    
    brains=idx.dbsearch(dict(pratica=row['pratica']))
    if len(brains):
        doc=brains[0].getObject()
        context.plone_log(doc.getId())
        
        for key in row.keys():
            if 'data' in key and row[key]:
                doc.setItem(key,StringToDate(str(row[key])))
                doc.doAction('assegna')
            elif row[key]:
                doc.setItem(key,row[key]) 
        
print 'ok'    
return printed
]]></resource>
    </resource>
  </design>
</plominodatabase>
